activity_totalsteps <- aggregate(steps ~ date, data = activity, sum)
mean(activity_totalsteps$steps)
median(activity_totalsteps$steps)
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
plot(steps_interval$interval,
steps_interval$steps,
type="l",
xlab="Interval",
ylab="Number of Steps",
main="The Average Daily Activity Pattern")
tail(steps_interval)
maxNumSteps<-steps_interval$interval[which.max(steps_interval$steps)]
maxSteps<-steps_interval$interval[which.max(steps_interval$steps)]
```{r}
maxSteps<-steps_interval$interval[which.max(steps_interval$steps)]
activity <- read.csv("~/Desktop/Coursera/ReproducibleResearch/RepData_PeerAssessment1/activity.csv",
stringsAsFactors=FALSE)
xname <- "Steps Taken Each Day"
yname <- "Frequency"
hist(activity_totalsteps$steps,
main   = paste("Histogram Of The Total Number Of", xname),
xlab   = xname,
ylab   = yname,
col    = "lightblue",
labels = FALSE,
axes   = "TRUE",
plot   = "TRUE",
border = "gray")
activity_totalsteps <- aggregate(steps ~ date, data = activity, sum)
mean(activity_totalsteps$steps)
median(activity_totalsteps$steps)
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
plot(steps_interval$interval,
steps_interval$steps,
type="l",
xlab="Interval",
ylab="Number of Steps",
main="The Average Daily Activity Pattern")
maxSteps<-steps_interval$interval[which.max(steps_interval$steps)]
activity <- read.csv("~/Desktop/Coursera/ReproducibleResearch/RepData_PeerAssessment1/activity.csv",
stringsAsFactors=FALSE)
activity_totalsteps <- aggregate(steps ~ date, data = activity, sum)
xname <- "Steps Taken Each Day"
yname <- "Frequency"
hist(activity_totalsteps$steps,
main   = paste("Histogram Of The Total Number Of", xname),
xlab   = xname,
ylab   = yname,
col    = "lightblue",
labels = FALSE,
axes   = "TRUE",
plot   = "TRUE",
border = "gray")
mean(activity_totalsteps$steps)
median(activity_totalsteps$steps)
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
plot(steps_interval$interval,
steps_interval$steps,
type="l",
xlab="Interval",
ylab="Number of Steps",
main="The Average Daily Activity Pattern")
maxSteps<-steps_interval$interval[which.max(steps_interval$steps)]
is.na(activity)
which(is.na(activity$steps)==TRUE
)
activity$steps[which(is.na(activity$steps)==TRUE),]
activity$steps[which(is.na(activity$steps)==TRUE)]
length(activity$steps[which(is.na(activity$steps)==TRUE)])
missing <- length(activity$steps[which(is.na(activity$steps)==TRUE)])
activity test <- activity
activitytest <- activity
activitytest$date2 <- as.Date(activitytest$date)
?class
class(activitytest$date2)
weekdays(activitytest$date2)
head(weekdays(activitytest$date2))
activitytest$date3 <- as.POSIXct(activitytest$date)
View(activity_totalsteps)
dim(activitytest)
str(activitytest)
dim(activity)
activitytest_mean <- aggregate(steps ~ date, data = activity, mean)
activitytest_median <- aggregate(steps ~ date, data = activity, median)
str(activity)
activity[is.na(activity)]
intavg <- activity[is.na(activity)]
str(intavg)
dim(intavg)
intavg2 <- is.na(activity$steps)
intavg3 <- is.na(activity)
dim(intavg3)
names(intavg3)
View(intavg3)
table(intavg2)
table(is.na(activity$steps))
table(is.na(activity$date))
table(is.na(activity$interval))
?na.omit
table(na.omit(activity$steps))
na.omit(activity$steps)
head(as.data.frame(tapply(activity$steps,activity$interval,mean,na.rm=TRUE)))
head(tapply(activity$steps,activity$interval,median,na.rm=TRUE))
head(as.data.frame(tapply(activity$steps,activity$interval,median,na.rm=TRUE)))
dim(head(as.data.frame(tapply(activity$steps,activity$interval,median,na.rm=TRUE))))
dim(as.data.frame(tapply(activity$steps,activity$interval,median,na.rm=TRUE)))
intAvg4<-as.data.frame(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
View(intAvg4)
intAvg4<-as.data.frame(tapply(activity$steps,activity$interval,median,na.rm=TRUE))
intAvg4<-as.data.frame(tapply(activity$steps,activity$interval,sum,na.rm=TRUE))
View(activity)
length(activity$steps[which(is.na(activity$steps)==TRUE)])
length(which(is.na(activity$steps)==TRUE))
?which
which(activity$steps)
which(is.na(activity$steps)==TRUE)
head(which(is.na(activity$steps)==TRUE))
tail(which(is.na(activity$steps)==TRUE))
which(is.na(activity$steps)==TRUE)
which(activity$steps)
which(activity$steps==TRUE)
which(is.na(activity$steps)==TRUE)
length(which(is.na(activity$steps)==TRUE))
print(great)
print("great")
print(which())
print(which
)
mean
methods(mean)
mean.default
activity$steps[is.na()]
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp, mode="wb")
unzip(temp, "activity.csv")
dd <- read.csv("activity.csv", header=T)
View(steps_interval)
dd2 <- read.csv(unzip(download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", mode="wb"), "activity.csv"), header=T)
dd2 <- read.csv(unzip(download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", activity.zip, mode="wb"), "activity.csv"), header=T)
dd2 <- read.csv(unzip(download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip"", mode="wb"), "activity.csv"), header=T)
dd2 <- read.csv(unzip(download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method= "curl"), "activity.csv"), header=T)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method= "curl")
unzip("activity.zip", header = T)
dd2 <- read.csv("activity.csv"), header=T)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method= "curl")
unzip("activity.zip")
dd2 <- read.csv("activity.csv"), header=T)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method= "curl")
unzip("activity.zip")
dd2 <- read.csv("activity.csv", header=T)
rm(dd)
rm(dd2)
rm(activity)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method= "curl")
unzip("activity.zip")
activity <- read.csv("activity.csv", header=T)
=288*5
288*5
1440/60
60*24
which.max(steps_interval$steps)
steps_interval$interval[104]
steps_interval[104,3]
head(steps_interval$interval)
tail(steps_interval$interval)
head100(steps_interval$interval)
head(steps_interval$interval, 100)
head(steps_interval$interval, 110)
head(steps_interval$interval, 105)
length(is.na(activity$steps))
sum(is.na(activity$steps))
activity$which_isna <- is.na(activity$steps)
activity$which_isna <- which(is.na(activity$steps))
activity_which_isna <- which(is.na(activity$steps))
tail(activity_which_isna <- which(is.na(activity$steps)))
sample(activity_which_isna <- which(is.na(activity$steps)))
length(activity_which_isna,sample(10))
sample(length(activity_which_isna),10)
activity_which_isna[sample(length(activity_which_isna),10)]
tail(activity_which_isna)
tail(activity_which_isna, 100)
tail(activity_which_isna, 700)
which_missing <- activity_which_isna
rm(activity_which_isna)
interval_row <- match(activity[which_missing,"interval"], steps_interval$interval)
rm(interval_row)
head(activity[which_missing,"interval"])
interval_row <- match(activity[which_missing,"interval"], steps_interval$interval)
activity_imp <- activity
activity_imp[which_missing,"steps"] <- steps_interval[interval_row,"steps"]
sum(is.na(activity_imp))
sum(is.na(activity_imp$steps))
View(activity_imp)
weekdays.Date(activity_imp$date)
activitytest$date4<- as.Date(activitytest$date)
activity_imp$date<- as.Date(activity_imp$date)
weekdays(activity_imp$date)
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
table(activity_imp$wday)
stepswday_interval <- aggregate(steps ~ interval+wday, data = activity_imp, mean)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ggplot(stepswday_interval, aes(interval, steps))+ geom_line() + facet(wday~.)
ggplot(stepswday_interval, aes(interval, steps))+ geom_line() + facet_grid(wday~.)
ggplot(stepswday_interval, aes(interval, steps))+ geom_line() + facet_grid(wday~.)+ scale_x_continuous(breaks = (0:8)*300, labels = paste0(c(0:8)*3, ':00'))
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
install_from_swirl("Statistical Inference")
swirl()
stepswday_interval$time <- seq_along(steps_interval_wday$interval)
stepswday_interval$time <- seq_along(stepswday_interval$interval)
View(stepswday_interval)
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24, labels = paste0(c(0:12)*2, ':00'))
ggplot(steps_interval_wday, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24,labels = paste0(c(0:12)*2, ':00'))
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24,labels = paste0(c(0:12)*2, ':00'))
match(activity[which_missing,"interval"], steps_interval$interval)
match(activity[which_missing,"interval"], steps_interval$interval)
activity_imp[which_missing,"steps"] <- steps_interval[interval_row,"steps"]
steps_interval[interval_row,"steps"]
dim(steps_interval[interval_row,"steps"])
rm(activitytest$date4)
activitytest$date4 <- NULL
activity$which_isna <- NULL
which_missing  <- which(is.na(activity$steps))
interval_row <- match(activity[which_missing,"interval"], steps_interval$interval)
activity_imp <- activity
activity_imp[which_missing,"steps"] <- steps_interval[interval_row,"steps"]
View(activity_imp)
interval_row
dim(interval_row)
str(interval_row)
#find out what rows are missing data and assign it to a vector
which_missing  <- which(is.na(activity$steps))
#create an index to hold the intervals corresponding to missing data
interval_row <- match(activity[which_missing,"interval"], steps_interval$interval)
#create a df to impute the data
activity_imp <- activity
#Impute the missing values to activity_imp$steps using which_missing as the index for the missing values and interval_row as the index for which steps to uses from steps_interval$steps.
activity_imp[which_missing,"steps"] <- steps_interval[interval_row,"steps"]
head(View(activity_imp))
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
activity_imp[which_missing,"steps"] <- steps_interval[interval_row,"steps"]
head(activity_imp)
activity_imp$date<- as.Date(activity_imp$date)
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
head(activity_imp$wday)
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
head(activity_imp)
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
head(activity_imp)
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
head(activity_imp)
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
head(activity_imp)
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
head(activity_imp)
ggplot(stepswday_interval, aes(interval, steps))+ geom_line() + facet_grid(wday~.)+ scale_x_continuous(breaks = (0:8)*300, labels = paste0(c(0:8)*3, ':00'))
stepswday_interval <- aggregate(steps ~ interval+wday, data = activity_imp, mean)
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
head(activity_imp)
activity_imp[which_missing,"steps"] <- steps_interval[interval_row,"steps"]
head(activity_imp)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method= "curl")
unzip("activity.zip")
activity <- read.csv("activity.csv", header=T)
activity_totalsteps <- aggregate(steps ~ date, data = activity, sum)
xname <- "Steps Taken Each Day"
yname <- "Frequency"
hist(activity_totalsteps$steps,
main   = paste("Histogram Of The Total Number Of", xname),
xlab   = xname,
ylab   = yname,
col    = "lightblue",
labels = FALSE,
axes   = "TRUE",
plot   = "TRUE",
border = "gray")
mean(activity_totalsteps$steps)
median(activity_totalsteps$steps)
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
plot(steps_interval$interval,
steps_interval$steps,
type="l",
xlab="Interval",
ylab="Number of Steps",
main="Average Daily Activity Pattern")
maxSteps<-steps_interval$interval[which.max(steps_interval$steps)]
missing <- sum(is.na(activity$steps))
which_missing  <- which(is.na(activity$steps))
interval_row <- match(activity[which_missing,"interval"], steps_interval$interval)
activity_imp <- activity
activity_imp[which_missing,"steps"] <- steps_interval[interval_row,"steps"]
head(activity_imp)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method= "curl")
unzip("activity.zip")
activity <- read.csv("activity.csv", header=T)
activity_totalsteps <- aggregate(steps ~ date, data = activity, sum)
xname <- "Steps Taken Each Day"
yname <- "Frequency"
hist(activity_totalsteps$steps,
main   = paste("Histogram Of The Total Number Of", xname),
xlab   = xname,
ylab   = yname,
col    = "lightblue",
labels = FALSE,
axes   = "TRUE",
plot   = "TRUE",
border = "gray")
mean(activity_totalsteps$steps)
median(activity_totalsteps$steps)
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
plot(steps_interval$interval,
steps_interval$steps,
type="l",
xlab="Interval",
ylab="Number of Steps",
main="Average Daily Activity Pattern")
maxSteps<-steps_interval$interval[which.max(steps_interval$steps)]
missing <- sum(is.na(activity$steps))
which_missing  <- which(is.na(activity$steps))
interval_row <- match(activity[which_missing,"interval"], steps_interval$interval)
activity_imp <- activity
activity_imp[which_missing,"steps"] <- steps_interval[interval_row,"steps"]
head(activity_imp)
activity_imp$date<- as.Date(activity_imp$date)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method= "curl")
unzip("activity.zip")
activity <- read.csv("activity.csv", header=T)
activity_totalsteps <- aggregate(steps ~ date, data = activity, sum)
xname <- "Steps Taken Each Day"
yname <- "Frequency"
hist(activity_totalsteps$steps,
main   = paste("Histogram Of The Total Number Of", xname),
xlab   = xname,
ylab   = yname,
col    = "lightblue",
labels = FALSE,
axes   = "TRUE",
plot   = "TRUE",
border = "gray")
mean(activity_totalsteps$steps)
median(activity_totalsteps$steps)
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
plot(steps_interval$interval,
steps_interval$steps,
type="l",
xlab="Interval",
ylab="Number of Steps",
main="Average Daily Activity Pattern")
maxSteps<-steps_interval$interval[which.max(steps_interval$steps)]
missing <- sum(is.na(activity$steps))
which_missing  <- which(is.na(activity$steps))
interval_row <- match(activity[which_missing,"interval"], steps_interval$interval)
activity_imp <- activity
activity_imp[which_missing,"steps"] <- steps_interval[interval_row,"steps"]
head(activity_imp)
activity_imp$date<- as.Date(activity_imp$date)
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
head(activity_imp)
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
activity_imp$wday <- factor((weekdays(activity_imp$date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
head(activity_imp)
stepswday_interval <- aggregate(steps ~ interval+wday, data = activity_imp, mean)
ggplot(stepswday_interval, aes(interval, steps))+ geom_line() + facet_grid(wday~.)+ scale_x_continuous(breaks = (0:8)*300, labels = paste0(c(0:8)*3, ':00'))
ggplot(stepswday_interval, aes(interval, steps), environment = environment())+ geom_line() + facet_grid(wday~.)+ scale_x_continuous(breaks = (0:8)*300, labels = paste0(c(0:8)*3, ':00'))
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24,labels = paste0(c(0:12)*2, ':00'))
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) + scale_x_continuous(breaks = (0:12)*24,labels = paste0(c(0:12)*2, ':00'))
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24,labels = paste0(c(0:12)*2, ':00'))
stepswday_interval <- aggregate(steps ~ interval+wday, data = activity_imp, mean)
stepswday_interval$time <- seq_along(stepswday_interval$interval)
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24,labels = paste0(c(0:12)*2, ':00'))
ggplot(stepswday_interval, aes(interval, steps))+ geom_line() + facet_grid(wday~.)+ scale_x_continuous(breaks = (0:8)*300, labels = paste0(c(0:8)*3, ':00'))
ggplot(stepswday_interval, aes(interval, steps))+ geom_line() + facet_grid(wday~.)+ scale_x_continuous(breaks = (0:8)*300, labels = paste0(c(0:8)*3, ':00'))
ggplot(steps_interval_wday, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24, labels = paste0(c(0:12)*2, ':00'))
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24, labels = paste0(c(0:12)*2, ':00'))
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24, labels = paste0(c(0:12)*2,':00'))
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24,labels = paste0(c(0:12)*2, ':00'))
steps_interval_wday$time <- 1:288
stepswday_interval$time <- 1:288
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24,labels = paste0(c(0:12)*2, ':00'))
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24, labels = paste0(c(0:12)*2, ':00'))
ggplot(stepswday_interval, aes(time, steps)) + geom_line() + facet_grid(wday ~ .) +
scale_x_continuous(breaks = (0:12)*24, labels = paste0(c(0:12)*2, ':00'))
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
steps_interval$time<- seq_along(steps_interval$interval)
plot(steps_interval$time,
steps_interval$steps,
type="l",
xlab="Interval",
ylab="Number of Steps",
main="Average Daily Activity Pattern")
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
steps_interval$time<- seq_along(steps_interval$interval)
plot(steps_interval$time,
steps_interval$steps,
type="l",
xaxt="n",
xlab="Time",
ylab="Number of Steps",
main="Average Daily Activity Pattern")
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
steps_interval$time<- seq_along(steps_interval$interval)
plot(steps_interval$time,
steps_interval$steps,
type="l",
xaxt="n",
xlab="Time",
ylab="Number of Steps",
main="Average Daily Activity Pattern")
axis(side = 1, at = (0:12)*24, labels = paste0(c(0:12)*2, ':00')
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
steps_interval$time<- seq_along(steps_interval$interval)
plot(steps_interval$time,
steps_interval$steps,
type="l",
xaxt="n",
xlab="Time",
ylab="Number of Steps",
main="Average Daily Activity Pattern")
axis(side = 1, at = (0:12)*24, labels = paste0(c(0:12)*2, ':00')
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
steps_interval$time<- seq_along(steps_interval$interval)
plot(steps_interval$time,
steps_interval$steps,
type="l",
xaxt="n",
xlab="Time",
ylab="Number of Steps",
main="Average Daily Activity Pattern")
axis(1, at = (0:12)*24, labels = paste0(c(0:12)*2, ':00')
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
steps_interval$time<- seq_along(steps_interval$interval)
plot(steps_interval$time,
steps_interval$steps,
type="l",
xaxt="n",
xlab="Time",
ylab="Number of Steps",
main="Average Daily Activity Pattern")
axis(1, at = (0:12)*24, labels = paste0(c(0:12)*2, ':00'))
(0:12)*24
seq(0:288, by=24)
seq(0,288, by=24)
steps_interval <- aggregate(steps ~ interval, data = activity, mean)
steps_interval$time<- seq_along(steps_interval$interval)
plot(steps_interval$time,
steps_interval$steps,
type="l",
xaxt="n",
xlab="Time",
ylab="Number of Steps",
main="Average Daily Activity Pattern")
axis(1, at = (0:12)*24, labels = paste0(c(0:12)*2, ':00'))
activity_imp_totalsteps <-  aggregate(steps ~ date, data = activity_imp, sum)
View(activity_imp_totalsteps)
View(activity_imp)
xname <- "Steps Taken Each Day"
yname <- "Frequency"
hist(activity_imp_totalsteps$steps,
main   = paste("Histogram Of The Total Number Of", xname),
xlab   = xname,
ylab   = yname,
col    = "lightblue",
labels = FALSE,
axes   = "TRUE",
plot   = "TRUE",
border = "gray")
swirl()
swirl()
33/36
deck
1/52
52
4/52
0/52
12/52
2/51
.8*.8
0.64
mypdf()
mypdf
integrate(mypdf, lower = 0, upper = 1.6)
sqrt(200)
2
info()
bye()
swirl()
swirl()
swirl()
swirl()
swirl()
.64
.64
